{"version":3,"sources":["webpack:///./src/images/social.jpg","webpack:///./src/containers/SchemaOrg.js","webpack:///./src/containers/Seo.js","webpack:///./src/components/Card.js","webpack:///./src/containers/LatestArticles.js","webpack:///./src/pages/blog.js","webpack:///./src/components/Section.js"],"names":["module","exports","SchemaOrg","isBlogPost","defaultTitle","title","url","image","description","canonicalUrl","datePublished","baseSchema","name","alternateName","schema","itemListElement","position","item","headline","author","publisher","mainEntityOfPage","Helmet","type","JSON","stringify","locales","Seo","customTitle","customDescription","customImage","siteMetadata","useStaticQuery","site","defaultImage","location","pathname","content","rel","href","property","move","keyframes","Card","styled","box","th","color","px","CardLink","a","CardHeader","CardBody","CardTitle","h3","CardText","pBox","LatestArticles","edges","row","my","map","edge","key","node","id","col","py","as","Link","to","fields","link","frontmatter","excerpt","Blog","data","allMdx","pageQuery","SectionTitle","h2Box","up","css","SectionDescription","p"],"mappings":"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","file":"component---src-pages-blog-js-c5836e8068eabcdc6f80.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/social-77bea1d08b9ec7b5c141a4aa017f8a95.jpg\";","import React from 'react';\nimport Helmet from 'react-helmet';\n\nexport function SchemaOrg({\n  isBlogPost,\n  defaultTitle,\n  title,\n  url,\n  image,\n  description,\n  canonicalUrl,\n  datePublished,\n}) {\n  const baseSchema = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url,\n      name: title,\n      alternateName: defaultTitle,\n    },\n  ];\n\n  const schema = isBlogPost\n    ? [\n        ...baseSchema,\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': url,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url,\n          name: title,\n          alternateName: defaultTitle,\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image,\n          },\n          description,\n          author: {\n            '@type': 'Person',\n            name: 'Piyush Mehta',\n          },\n          publisher: {\n            '@type': 'Person',\n            name: 'Piyush Mehta',\n          },\n          mainEntityOfPage: {\n            '@type': 'WebSite',\n            '@id': canonicalUrl,\n          },\n          datePublished,\n        },\n      ]\n    : baseSchema;\n\n  return (\n    <Helmet>\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n    </Helmet>\n  );\n}\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport { Location } from '@reach/router';\nimport defaultImage from '../images/social.jpg';\nimport { SchemaOrg } from './SchemaOrg';\n\nconst locales = {\n  description:\n    'Personal website of Piyush Mehta. Learn and level-up about React & JavaScript.',\n};\n\nexport function Seo({\n  title: customTitle,\n  description: customDescription,\n  image: customImage,\n  datePublished,\n  isBlogPost,\n}) {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          canonicalUrl\n        }\n      }\n    }\n  `);\n\n  const title = customTitle || 'Piyush Mehta';\n  const description = customDescription || locales.description;\n  const image = customImage || defaultImage;\n\n  return (\n    <Location>\n      {({ location }) => {\n        const url = `${siteMetadata.canonicalUrl}${location.pathname}`;\n\n        return (\n          <>\n            <Helmet>\n              {/* General tags */}\n              <title>{title}</title>\n              <meta name=\"description\" content={description} />\n              <meta\n                name=\"image\"\n                content={`${siteMetadata.canonicalUrl}${image}`}\n              />\n              <link rel=\"canonical\" href={url} />\n\n              {/* OpenGraph tags */}\n              <meta property=\"og:url\" content={url} />\n              {isBlogPost ? (\n                <meta property=\"og:type\" content=\"article\" />\n              ) : null}\n              <meta property=\"og:title\" content={title} />\n              <meta property=\"og:description\" content={description} />\n              <meta\n                property=\"og:image\"\n                content={`${siteMetadata.canonicalUrl}${image}`}\n              />\n\n              {/* Twitter Card tags */}\n              <meta name=\"twitter:card\" content=\"summary_large_image\" />\n              <meta name=\"twitter:creator\" content=\"@PiyushMehtas\" />\n              <meta name=\"twitter:title\" content={title} />\n              <meta name=\"twitter:description\" content={description} />\n              <meta\n                name=\"twitter:image\"\n                content={`${siteMetadata.canonicalUrl}${image}`}\n              />\n            </Helmet>\n            <SchemaOrg\n              title={title}\n              url={url}\n              defaultTitle=\"Piyush Mehta\"\n              isBlogPost={isBlogPost}\n              image={image}\n              description={description}\n              canonicalUrl={siteMetadata.canonicalUrl}\n              datePublished={datePublished}\n            />\n          </>\n        );\n      }}\n    </Location>\n  );\n}\n","import styled, { th, keyframes } from '@xstyled/styled-components';\n\nconst move = keyframes`\n  to {\n    transform: scale(1.2);\n  }\n`;\n\nexport const Card = styled.box`\n  background: linear-gradient(\n    340deg,\n    ${th.color('card-gradient-light')} 0%,\n    ${th.color('card-gradient-dark')} 100%\n  );\n  border: 1;\n  border-color: card-border;\n  box-sizing: border-box;\n  box-shadow: ${th.px(5)} ${th.px(5)} ${th.px(15)} rgba(0, 0, 0, 0.12);\n  border-radius: 8;\n\n  h4 {\n    margin: 2 0;\n    color: light100;\n    font-weight: 700;\n  }\n\n  hr {\n    border: 0;\n    height: 1px;\n    margin: 4 0;\n    background-color: light500;\n  }\n\n  ul {\n    padding: 0 0 0 2;\n  }\n\n  li {\n    list-style-type: none;\n    padding: 0;\n\n    &::before {\n      display: inline-block;\n      content: 'â˜…';\n      font-size: 0.6em;\n      margin-right: 2;\n      vertical-align: 15%;\n      color: accent;\n      animation: ${move} 500ms infinite;\n      animation-direction: alternate-reverse;\n    }\n  }\n`;\n\nexport const CardLink = styled.a`\n  ${Card} {\n    transition: base;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus > ${Card}, &:hover > ${Card} {\n    transform: translateY(${th.px(-3)}) scale(1.03);\n    box-shadow: ${th.px(7)} ${th.px(7)} ${th.px(36)} rgba(0, 0, 0, 0.12);\n    border-color: card-border-hover;\n    outline: 0;\n  }\n`;\n\nexport const CardHeader = styled.box`\n  padding: 3;\n  background-color: light700;\n`;\n\nexport const CardFooter = CardHeader;\n\nexport const CardBody = styled.box`\n  padding: 3;\n`;\n\nexport const CardTitle = styled.h3`\n  font-size: 22;\n  font-weight: 500;\n  margin: 0 0 2;\n  color: light100;\n`;\n\nexport const CardText = styled.pBox`\n  margin: 0;\n  text-align: justify;\n\n  a {\n    transition: base;\n    border-bottom: 1px dotted;\n    border-bottom-color: currentColor;\n\n    &:hover {\n      color: accent;\n      border-bottom-color: accent;\n    }\n  }\n`;\n","import React from 'react';\nimport { Box } from '@xstyled/styled-components';\nimport { Link } from 'gatsby';\nimport {\n  Card,\n  CardLink,\n  CardTitle,\n  CardBody,\n  CardText,\n} from '../components/Card';\n\nexport function LatestArticles({ edges }) {\n  return (\n    <Box row my={-2}>\n      {edges.map((edge) => (\n        <Box key={edge.node.id} col={1} py={2}>\n          <CardLink as={Link} to={edge.node.fields.link}>\n            <Card>\n              <CardBody>\n                <CardTitle>{edge.node.frontmatter.title}</CardTitle>\n                <CardText>{edge.node.excerpt}</CardText>\n              </CardBody>\n            </Card>\n          </CardLink>\n        </Box>\n      ))}\n    </Box>\n  );\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { SectionTitle, SectionDescription } from '../components/Section';\nimport { PageContainer } from '../components/Container';\nimport { LatestArticles } from '../containers/LatestArticles';\nimport { Seo } from '../containers/Seo';\n\nexport default function Blog({ data }) {\n\n  return (\n    <>\n      <Seo title=\"Piyush Mehta â€” Blog\" />\n      <PageContainer>\n        <SectionTitle>Blog</SectionTitle>\n        <SectionDescription>\n          I write about React, JavaScript and how to solve problems. Enjoy your\n          read!\n        </SectionDescription>\n        <LatestArticles edges={data.allMdx.edges} />\n      </PageContainer>\n    </>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { published: { ne: false } }\n        # fields: { langKey: { eq: \"en\" } }\n      }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 190)\n          id\n          fields {\n            link\n          }\n          frontmatter {\n            title\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled, { up, css, th } from '@xstyled/styled-components';\n\nexport const SectionTitle = styled.h2Box`\n  font-weight: 500;\n  font-size: 26;\n  color: lighter;\n  margin: 0 0 4 0;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: calc(100vw - ${th.px(48)});\n  white-space: nowrap;\n  overflow: hidden;\n\n  &::before {\n    content: 'â˜…';\n    margin-right: 3;\n    font-family: monospace;\n    color: accent;\n    font-size: 20;\n    position: relative;\n  }\n\n  &::after {\n    content: '';\n    display: block;\n    height: 1px;\n    max-width: 280;\n    width: 100%;\n    background-color: light500;\n    position: relative;\n    top: 3;\n    margin-left: 20;\n  }\n\n  ${up(\n    'md',\n    css`\n      font-size: 32;\n      margin: 0 0 4 3;\n\n      &::after {\n        top: 5;\n      }\n    `\n  )}\n`;\n\nexport const SectionDescription = styled.p`\n  font-size: 20;\n  margin: 4 0 5;\n`;\n"],"sourceRoot":""}